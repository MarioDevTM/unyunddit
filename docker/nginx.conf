# nginx.tpl.conf â€” render with: envsubst '$PORT $NGINX_PORT' < nginx.tpl.conf > /etc/nginx/nginx.conf

events {
  worker_connections 1024;
}

http {
  # Core tuning
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;

  # Silence types_hash warning
  types_hash_max_size 4096;
  types_hash_bucket_size 128;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  # Disable gzip (no value over Tor, and reduces attack surface)
  gzip off;

  # Drop connections that time out without sending full headers
  reset_timedout_connection on;

  # Trust local/LAN proxies (only if applicable in your setup)
  set_real_ip_from 127.0.0.1;
  set_real_ip_from 10.0.0.0/8;
  set_real_ip_from 172.16.0.0/12;
  set_real_ip_from 192.168.0.0/16;
  set_real_ip_from ::1;
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  # Rate limit zone MUST be defined in http {}
  limit_req_zone $binary_remote_addr zone=reqs:10m rate=5r/s;

  # Proper Connection header handling for WebSockets
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream sveltekit {
    server 127.0.0.1:${PORT};
    keepalive 32;
  }

  server {
    listen ${NGINX_PORT};
    server_name _;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    server_tokens off;

    # Protection against compression bombs and large payloads
    client_max_body_size 100k;
    client_body_buffer_size 10k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    location / {
      proxy_pass http://sveltekit;

      # Apply rate limit
      limit_req zone=reqs burst=10 nodelay;

      # Forward original client details
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;

      # WebSocket/HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      # Timeouts & buffering
      proxy_connect_timeout 30s;
      proxy_send_timeout    30s;
      proxy_read_timeout    30s;
      proxy_buffering off;
      proxy_request_buffering off;
      
      # Additional protection against large responses
      proxy_buffer_size 4k;
      proxy_buffers 8 4k;
      proxy_busy_buffers_size 8k;
    }

    # Health check
    location = /health {
      access_log off;
      add_header Content-Type text/plain;
      return 200 "OK\n";
    }

    # Optional: stricter limits for non-GET methods (uncomment if desired)
    # location / {
    #   limit_except GET HEAD {
    #     client_max_body_size 50k;
    #     client_body_timeout 5s;
    #   }
    # }
  }
}
